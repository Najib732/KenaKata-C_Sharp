<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="SearchButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>